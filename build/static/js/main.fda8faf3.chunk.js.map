{"version":3,"sources":["App.js","logo.svg","reportWebVitals.js","index.js"],"names":["App","useState","oldExpression","setOldExpression","expression","setExpression","prev","setPrev","numerics","Set","operators","buttons","evaluateExpression","evalution","eval","String","putNumerics","value","putOperator","slice","putDelete","length","handleKeyUp","event","console","log","key","has","className","tabIndex","onKeyUp","style","width","height","background","display","flexDirection","justifyContent","alignItems","padding","borderRadius","margin","flexWrap","map","buttonValue","idx","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"i6BAIA,SAASA,MAAO,IAAD,UAC2BC,oDAAS,IADpC,sNACRC,cADQ,cACOC,iBADP,yBAEqBF,oDAAS,KAF9B,uNAERG,WAFQ,cAEIC,cAFJ,yBAGSJ,oDAAS,OAHlB,uNAGRK,KAHQ,cAGFC,QAHE,cAKTC,SAAW,IAAIC,IAAI,eACnBC,UAAY,IAAID,IAAI,SAEpBE,QAAU,CACZ,IACA,IACA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAGEC,mBAAqB,SAArBA,qBACF,IAAIC,UAAYC,KAAKV,YACrBD,iBAAiBC,WAAa,MAC9BC,cAAcU,OAAOF,YAErBN,QAAQ,QAGNS,YAAc,SAAUC,GACd,OAARX,MACFH,iBAAiB,SAAWC,YAC5BC,cAAcY,IAEdZ,cAAcD,WAAaa,GAE7BV,QAAQ,QAGNW,YAAc,SAAUD,GAExBZ,cADU,MAARC,KACYF,WAAaa,EAEbb,WAAWe,MAAM,GAAI,GAAKF,GAE1CV,QAAQ,OAGNa,UAAY,WACVhB,WAAWiB,QAAU,GACvBhB,cAAcD,WAAWe,MAAM,GAAI,IAErCZ,QAAQ,QAGNe,YAAc,SAAUC,GAC1BC,QAAQC,IAAIF,EAAMG,KACA,cAAdH,EAAMG,IACRN,YACSZ,SAASmB,IAAIJ,EAAMG,KAC5BV,YAAYO,EAAMG,KACThB,UAAUiB,IAAIJ,EAAMG,KAC7BR,YAAYK,EAAMG,KACK,UAAdH,EAAMG,KACfd,sBAIJ,OACE,mEAAKgB,UAAU,MAAMC,SAAU,EAAGC,QAASR,YAC3CS,MAAO,CACLC,MAAM,OACNC,OAAO,QACPC,WAAW,UACXC,QAAQ,OACRC,cAAc,SACdC,eAAe,SACfC,WAAW,UARb,UAUC,mEAAKP,MAAO,CACXC,MAAM,QACNC,OAAO,OACPC,WAAW,UACXC,QAAQ,OACRC,cAAc,SACdE,WAAW,WACXD,eAAe,SACfE,QAAQ,OACRC,aAAa,QATd,UAaC,iEAAIT,MAAO,CACTU,OAAO,OADT,SACkBvC,gBAClB,iEACA6B,MAAO,CACLU,OAAO,OAFT,SAEkBrC,gBAGpB,kEACM2B,MAAO,CACLC,MAAO,QACPE,WAAY,UACZC,QAAS,OACTC,cAAe,MACfE,WAAY,WACZD,eAAgB,SAChBE,QAAS,OACTE,OAAQ,OACRD,aAAc,OACdE,SAAU,QAXlB,SAcO/B,QAAQgC,KAAI,SAAUC,EAAaC,GAClC,OACE,qEACEd,MAAO,CACLC,MAAO,OACPO,QAAS,MACTE,OAAQ,OAEVK,QAAS,WACa,OAAhBF,EACFxB,YACSZ,SAASmB,IAAIiB,GACtB5B,YAAY4B,GACHlC,UAAUiB,IAAIiB,GACvB1B,YAAY0B,GACa,MAAhBA,GACThC,sBAdN,SAkBGgC,YAUF5C,2B,mDC7JA,K,0GCYA+C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC1D,EAAA,EAAD,MAEF2D,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fda8faf3.chunk.js","sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useState } from \"react\";\n\nfunction App() {\n  let [oldExpression, setOldExpression] = useState(\"\");\n  let [expression, setExpression] = useState(\"0\");\n  let [prev, setPrev] = useState(\"ANS\");\n\n  let numerics = new Set(\"0123456789.\");\n  let operators = new Set(\"+-*/%\");\n\n  let buttons = [\n    \"(\",\n    \")\",\n    \"%\",\n    \"CE\",\n    \"7\",\n    \"8\",\n    \"9\",\n    \"/\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"*\",\n    \"1\",\n    \"2\",\n    \"3\",\n    \"-\",\n    \"0\",\n    \".\",\n    \"=\",\n    \"+\",\n  ];\n\n  let evaluateExpression = function () {\n    let evalution = eval(expression);\n    setOldExpression(expression + \" =\");\n    setExpression(String(evalution));\n    // expression = evalution;\n    setPrev(\"ANS\");\n  };\n\n  let putNumerics = function (value) {\n    if (prev == \"ANS\") {\n      setOldExpression(\"Ans = \" + expression);\n      setExpression(value);\n    } else {\n      setExpression(expression + value);\n    }\n    setPrev(\"NUM\");\n  };\n\n  let putOperator = function (value) {\n    if (prev != \"OP\") {\n      setExpression(expression + value);\n    } else {\n      setExpression(expression.slice(0, -1) + value);\n    }\n    setPrev(\"OP\");\n  };\n\n  let putDelete = function () {\n    if (expression.length >= 1) {\n      setExpression(expression.slice(0, -1));\n    }\n    setPrev(\"DEL\");\n  };\n\n  let handleKeyUp = function (event) {\n    console.log(event.key);\n    if (event.key === \"Backspace\") {\n      putDelete();\n    } else if (numerics.has(event.key)) {\n      putNumerics(event.key);\n    } else if (operators.has(event.key)) {\n      putOperator(event.key);\n    } else if (event.key === \"Enter\") {\n      evaluateExpression();\n    }\n  };\n\n  return (\n    <div className=\"App\" tabIndex={0} onKeyUp={handleKeyUp}\n    style={{\n      width:\"100%\",\n      height:\"100vh\",\n      background:\"#999999\",\n      display:'flex',\n      flexDirection:\"column\",\n      justifyContent:\"center\",\n      alignItems:\"center\"\n    }}>\n     <div style={{\n      width:\"400px\",\n      height:\"50px\",\n      background:\"#ffffff\",\n      display:\"flex\",\n      flexDirection:\"column\",\n      alignItems:\"flex-end\",\n      justifyContent:\"center\",\n      padding:\"20px\",\n      borderRadius:\"10px\"\n      \n    }}>\n\n      <h6 style={{\n        margin:\"1px\"}}>{oldExpression}</h6>\n      <h1\n      style={{\n        margin:\"1px\"}}>{expression}</h1>\n    </div>\n\n    <div\n          style={{\n            width: \"400px\",\n            background: \"#ffffff\",\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"flex-end\",\n            justifyContent: \"center\",\n            padding: \"20px\",\n            margin: \"20px\",\n            borderRadius: \"10px\",\n            flexWrap: \"wrap\",\n          }}\n        >\n          {buttons.map(function (buttonValue, idx) {\n            return (\n              <button\n                style={{\n                  width: \"90px\",\n                  padding: \"5px\",\n                  margin: \"5px\",\n                }}\n                onClick={function () {\n                  if (buttonValue === \"CE\") {\n                    putDelete();\n                  } else if (numerics.has(buttonValue)) {\n                    putNumerics(buttonValue);\n                  } else if (operators.has(buttonValue)) {\n                    putOperator(buttonValue);\n                  } else if (buttonValue === \"=\") {\n                    evaluateExpression();\n                  }\n                }}\n              >\n                {buttonValue}\n              </button>\n            );\n          })}\n        </div>\n      </div>\n    \n  );\n}\n\nexport default App;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}